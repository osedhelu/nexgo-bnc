package com.disglobal.bnc.utils

class TLVConverter {
    private val tags = mapOf(
        "06" to "Object Identifier (OID)",
        "41" to "Country code and national data",
        "42" to "Issuer Identification Number (IIN)",
        "43" to "Card service data",
        "44" to "Initial access data",
        "45" to "Card issuer`s data",
        "46" to "Pre-issuing data",
        "47" to "Card capabilities",
        "48" to "Status information",
        "4D" to "Extended header list",
        "4F" to "Application Identifier (ADF Name)",
        "50" to "Application Label",
        "51" to "Path",
        "52" to "Command to perform",
        "53" to "Discretionary data, discretionary template",
        "56" to "Track 1 Data",
        "57" to "Track 2 Equivalent Data",
        "58" to "Track 3 Equivalent Data",
        "59" to "Card expiration date",
        "5A" to "Application Primary Account Number (PAN)",
        "5B" to "Name of an individual",
        "5C" to "Tag list",
        "5D" to "Deleted (see 9D)",
        "5E" to "Proprietary login data",
        "5F20" to "Cardholder Name",
        "5F21" to "Track 1, identical to the data coded",
        "5F22" to "Track 2, identical to the data coded",
        "5F23" to "Track 3, identical to the data coded",
        "5F24" to "Application Expiration Date",
        "5F25" to "Application Effective Date",
        "5F26" to "Date, Card Effective",
        "5F27" to "Interchange control",
        "5F28" to "Issuer Country Code",
        "5F29" to "Interchange profile",
        "5F2A" to "Transaction Currency Code",
        "5F2B" to "Date of birth",
        "5F2C" to "Cardholder nationality",
        "5F2D" to "Language Preference",
        "5F2E" to "Cardholder biometric data",
        "5F2F" to "PIN usage policy",
        "5F30" to "Service Code",
        "5F32" to "Transaction counter",
        "5F33" to "Date, Transaction",
        "5F34" to "Application Primary Account Number (PAN) Sequence Number (PSN)",
        "5F35" to "Sex (ISO 5218)",
        "5F36" to "Transaction Currency Exponent",
        "5F37" to "Static internal authentication (one-step)",
        "5F38" to "Static internal authentication - first associated data",
        "5F39" to "Static internal authentication - second associated data",
        "5F3A" to "Dynamic internal authentication",
        "5F3B" to "Dynamic external authentication",
        "5F3C" to "Transaction Reference Currency Code",
        "5F3D" to "Transaction Reference Currency Exponent",
        "5F40" to "Cardholder portrait image",
        "5F41" to "Element list",
        "5F42" to "Address",
        "5F43" to "Cardholder handwritten signature image",
        "5F44" to "Application image",
        "5F45" to "Display message",
        "5F46" to "Timer",
        "5F47" to "Message reference",
        "5F48" to "Cardholder private key",
        "5F49" to "Cardholder public key",
        "5F4A" to "Public key of certification authority",
        "5F4B" to "Deprecated (see note 2 below)",
        "5F4C" to "Certificate holder authorization",
        "5F4D" to "Integrated circuit manufacturer identifier",
        "5F4E" to "Certificate content",
        "5F50" to "Issuer Uniform resource locator (URL)",
        "5F53" to "International Bank Account Number (IBAN)",
        "5F54" to "Bank Identifier Code (BIC)",
        "5F55" to "Issuer Country Code (alpha2 format)",
        "5F56" to "Issuer Country Code (alpha3 format)",
        "5F57" to "Account Type",
        "60" to "Template, Dynamic Authentication",
        "6080" to "Commitment (e.g., a positive number less than the public RSA modulus in use)",
        "6081" to "Challenge (e.g., a number, possibly zero, less than the public RSA exponent in use)",
        "6082" to "Response (e.g., a positive number less than the public RSA modulus in use)",
        "6083" to "Committed challenge (e.g., the hash-code of a commitment data object)",
        "6084" to "Authentication code (e.g., the hash-code of one or more data fields and a commitment data object)",
        "6085" to "Exponential (e.g., a public positive number for establishing a session key by a DH method)",
        "60A0" to "Template, Identification data",
        "61" to "Application Template",
        "62" to "File Control Parameters (FCP) Template",
        "6280" to "Number of data bytes in the file, excluding structural information",
        "6281" to "Number of data bytes in the file, including structural information if any",
        "6282" to "File descriptor byte",
        "6283" to "File identifier",
        "6284" to "DF name",
        "6285" to "Proprietary information, primitive encoding (i.e., not coded in BER-TLV)",
        "6286" to "Security attribute in proprietary format",
        "6287" to "Identifier of an EF containing an extension of the file control information",
        "6288" to "Short EF identifier",
        "628A" to "Life cycle status byte (LCS)",
        "628B" to "Security attribute referencing the expanded format",
        "628C" to "Security attribute in compact format",
        "628D" to "Identifier of an EF containing security environment templates",
        "62A0" to "Template, Security attribute for data objects",
        "62A1" to "Template, Security attribute for physical interfaces",
        "62A2" to "One or more pairs of data objects, short EF identifier (tag 88) - absolute or relative path (tag 51)",
        "62A5" to "Proprietary information, constructed encoding",
        "62AB" to "Security attribute in expanded format",
        "62AC" to "Identifier of a cryptographic mechanism",
        "63" to "Wrapper",
        "64" to "Template, File Management Data (FMD)",
        "65" to "Cardholder related data",
        "66" to "Template, Card data",
        "67" to "Template, Authentication data",
        "68" to "Special user requirements",
        "6A" to "Template, Login",
        "6A80" to "Qualifier",
        "6A81" to "Telephone Number",
        "6A82" to "Text",
        "6A83" to "Delay indicators, for detecting an end of message",
        "6A84" to "Delay indicators, for detecting an absence of response",
        "6B" to "Template, Qualified name",
        "6B06" to "Qualified name",
        "6B80" to "Name",
        "6BA0" to "Name",
        "6C" to "Template, Cardholder image",
        "6D" to "Template, Application image",
        "6E" to "Application related data",
        "6F" to "File Control Information (FCI) Template",
        "6FA5" to "Template, FCI A5",
        "70" to "READ RECORD Response Message Template",
        "71" to "Issuer Script Template 1",
        "7186" to "Issuer Script Command",
        "719F18" to "Issuer Script Identifier",
        "72" to "Issuer Script Template 2",
        "73" to "Directory Discretionary Template",
        "77" to "Response Message Template Format 2",
        "78" to "Compatible Tag Allocation Authority",
        "79" to "Coexistent Tag Allocation Authority",
        "7A" to "Template, Security Support (SS)",
        "7A80" to "Card session counter",
        "7A81" to "Session identifier",
        "7A82" to "File selection counter",
        "7A83" to "File selection counter",
        "7A84" to "File selection counter",
        "7A85" to "File selection counter",
        "7A86" to "File selection counter",
        "7A87" to "File selection counter",
        "7A88" to "File selection counter",
        "7A89" to "File selection counter",
        "7A8A" to "File selection counter",
        "7A8B" to "File selection counter",
        "7A8C" to "File selection counter",
        "7A8D" to "File selection counter",
        "7A8E" to "File selection counter",
        "7A93" to "Digital signature counter",
        "7A9F2X" to "Internal progression value ('X'-is a specific index, e.g., an index referencing a counter of file selections)",
        "7A9F3Y" to "External progression value ('Y'-is a specific index, e.g., an index referencing an external time stamp)",
        "7B" to "Template, Security Environment (SE)",
        "7B80" to "SEID byte, mandatory",
        "7B8A" to "LCS byte, optional",
        "7BAC" to "Cryptographic mechanism identifier template, optional",
        "7BA4" to "Control reference template (CRT)",
        "7BAA" to "Control reference template (CRT)",
        "7BB4" to "Control reference template (CRT)",
        "7BB6" to "Control reference template (CRT)",
        "7BB8" to "Control reference template (CRT)",
        "7D" to "Template, Secure Messaging (SM)",
        "7D80" to "Plain value not coded in BER-TLV",
        "7D81" to "Plain value not coded in BER-TLV",
        "7D82" to "Cryptogram (plain value coded in BER-TLV and including secure messaging data objects)",
        "7D83" to "Cryptogram (plain value coded in BER-TLV and including secure messaging data objects)",
        "7D84" to "Cryptogram (plain value coded in BER-TLV, but not including secure messaging data objects)",
        "7D85" to "Cryptogram (plain value coded in BER-TLV, but not including secure messaging data objects)",
        "7D86" to "Padding-content indicator byte followed by cryptogram (plain value not coded in BER-TLV)",
        "7D87" to "Padding-content indicator byte followed by cryptogram (plain value not coded in BER-TLV)",
        "7D8E" to "Cryptographic checksum (at least four bytes)",
        "7D90" to "Hash-code",
        "7D91" to "Hash-code",
        "7D92" to "Certificate (not BER-TLV coded data)",
        "7D93" to "Certificate (not BER-TLV coded data)",
        "7D94" to "Security environment identifier (SEID byte, see 6.5)",
        "7D95" to "Security environment identifier (SEID byte, see 6.5)",
        "7D96" to "Number Le in the unsecured command APDU (one or two bytes)",
        "7D97" to "Number Le in the unsecured command APDU (one or two bytes)",
        "7D99" to "Processing status of the secured response APDU (new SW1-SW2, two bytes)",
        "7D9A" to "Input data element for the computation of a digital signature (the value field is signed)",
        "7D9B" to "Input data element for the computation of a digital signature (the value field is signed)",
        "7D9C" to "Public key",
        "7D9D" to "Public key",
        "7D9E" to "Digital signature",
        "7DA0" to "Input template for the computation of a hash-code (the template is hashed)",
        "7DA1" to "Input template for the computation of a hash-code (the template is hashed)",
        "7DA2" to "Input template for the verification of a cryptographic checksum (the template is integrated)",
        "7DA4" to "Control reference template for authentication (AT)",
        "7DA5" to "Control reference template for authentication (AT)",
        "7DA8" to "Input template for the verification of a digital signature (the template is signed)",
        "7DAA" to "Template, Control reference for hash-code (HT)",
        "7DAB" to "Template, Control reference for hash-code (HT)",
        "7DAC" to "Input template for the computation of a digital signature (the concatenated value fields are signed)",
        "7DAD" to "Input template for the computation of a digital signature (the concatenated value fields are signed)",
        "7DAE" to "Input template for the computation of a certificate (the concatenated value fields are certified)",
        "7DAF" to "Input template for the computation of a certificate (the concatenated value fields are certified)",
        "7DB0" to "Plain value coded in BER-TLV and including secure messaging data objects",
        "7DB1" to "Plain value coded in BER-TLV and including secure messaging data objects",
        "7DB2" to "Plain value coded in BER-TLV, but not including secure messaging data objects",
        "7DB3" to "Plain value coded in BER-TLV, but not including secure messaging data objects",
        "7DB4" to "Control reference template for cryptographic checksum (CCT)",
        "7DB5" to "Control reference template for cryptographic checksum (CCT)",
        "7DB6" to "Control reference template for digital signature (DST)",
        "7DB7" to "Control reference template for digital signature (DST)",
        "7DB8" to "Control reference template for confidentiality (CT)",
        "7DB9" to "Control reference template for confidentiality (CT)",
        "7DBA" to "Response descriptor template",
        "7DBB" to "Response descriptor template",
        "7DBC" to "Input template for the computation of a digital signature (the template is signed)",
        "7DBD" to "Input template for the computation of a digital signature (the template is signed)",
        "7DBE" to "Input template for the verification of a certificate (the template is certified)",
        "7E" to "Template, Nesting Interindustry data objects",
        "7F20" to "Display control template",
        "7F21" to "Cardholder certificate",
        "7F2E" to "Biometric data template",
        "7F49" to "Template, Cardholder public key",
        "7F4980" to "Algorithm reference as used in control reference data objects for secure messaging",
        "7F4981" to "RSA Modulus (a number denoted as n coded on x bytes), or DSA First prime (a number denoted as p coded on y bytes), or ECDSA Prime (a number denoted as p coded on z bytes)",
        "7F4982" to "RSA Public exponent (a number denoted as v, e.g., 65537), or DSA Second prime (a number denoted as q dividing p-1, e.g., 20 bytes), or ECDSA First coefficient (a number denoted as a coded on z bytes)",
        "7F4983" to "DSA Basis (a number denoted as g of order q coded on y bytes), or ECDSA Second coefficient (a number denoted as b coded on z bytes)",
        "7F4984" to "DSA Public key (a number denoted as y equal to g to the power x mod p where x is the private key coded on y bytes), or ECDSA Generator (a point denoted as PB on the curve, coded on 2z bytes)",
        "7F4985" to "ECDSA Order (a prime number denoted as q, order of the generator PB, coded on z bytes)",
        "7F4986" to "ECDSA Public key (a point denoted as PP on the curve, equal to x times PB where x is the private key, coded on 2z bytes)",
        "7F4C" to "Template, Certificate Holder Authorization",
        "7F4E" to "Certificate Body",
        "7F4E42" to "Certificate Authority Reference",
        "7F4E5F20" to "Certificate Holder Reference",
        "7F4E5F24" to "Expiration Date, Certificate",
        "7F4E5F25" to "Effective Date, Certificate",
        "7F4E5F29" to "Certificate Profile Identifier",
        "7F4E65" to "Certificate Extensions",
        "7F60" to "Template, Biometric information",
        "80" to "Response Message Template Format 1",
        "81" to "Amount, Authorised (Binary)",
        "82" to "Application Interchange Profile (AIP)",
        "83" to "Command Template",
        "84" to "Dedicated File (DF) Name",
        "86" to "Issuer Script Command",
        "87" to "Application Priority Indicator",
        "88" to "Short File Identifier (SFI)",
        "89" to "Authorisation Code",
        "8A" to "Authorisation Response Code (ARC)",
        "8C" to "Card Risk Management Data Object List 1 (CDOL1)",
        "8D" to "Card Risk Management Data Object List 2 (CDOL2)",
        "8E" to "Cardholder Verification Method (CVM) List",
        "8F" to "Certification Authority Public Key Index (PKI)",
        "90" to "Issuer Public Key Certificate",
        "91" to "Issuer Authentication Data",
        "92" to "Issuer Public Key Remainder",
        "93" to "Signed Static Application Data",
        "94" to "Application File Locator (AFL)",
        "95" to "Terminal Verification Results (TVR)",
        "97" to "Transaction Certificate Data Object List (TDOL)",
        "98" to "Transaction Certificate (TC) Hash Value",
        "99" to "Transaction Personal Identification Number (PIN) Data",
        "9A" to "Transaction Date",
        "9B" to "Transaction Status Information (TSI)",
        "9C" to "Transaction Type",
        "9D" to "Directory Definition File (DDF) Name",
        "9F01" to "Acquirer Identifier",
        "9F02" to "Amount, Authorised (Numeric)",
        "9F03" to "Amount, Other (Numeric)",
        "9F04" to "Amount, Other (Binary)",
        "9F05" to "Application Discretionary Data",
        "9F06" to "Application Identifier (AID) - terminal",
        "9F07" to "Application Usage Control",
        "9F08" to "Application Version Number",
        "9F09" to "Application Version Number",
        "9F0B" to "Cardholder Name Extended",
        "9F0D" to "Issuer Action Code - Default",
        "9F0E" to "Issuer Action Code - Denial",
        "9F0F" to "Issuer Action Code - Online",
        "9F10" to "Issuer Application Data",
        "9F11" to "Issuer Code Table Index",
        "9F12" to "Application Preferred Name",
        "9F13" to "Last Online Application Transaction Counter (ATC) Register",
        "9F14" to "Lower Consecutive Offline Limit",
        "9F15" to "Merchant Category Code",
        "9F16" to "Merchant Identifier",
        "9F17" to "Personal Identification Number (PIN) Try Counter",
        "9F18" to "Issuer Script Identifier",
        "9F1A" to "Terminal Country Code",
        "9F1B" to "Terminal Floor Limit",
        "9F1C" to "Terminal Identification",
        "9F1D" to "Terminal Risk Management Data",
        "9F1E" to "Interface Device (IFD) Serial Number",
        "9F1F" to "Track 1 Discretionary Data",
        "9F20" to "Track 2 Discretionary Data",
        "9F21" to "Transaction Time",
        "9F22" to "Certification Authority Public Key Index",
        "9F23" to "Upper Consecutive Offline Limit",
        "9F26" to "Application Cryptogram",
        "9F27" to "Cryptogram Information Data",
        "9F2D" to "ICC PIN Encipherment Public Key Certificate",
        "9F2E" to "ICC PIN Encipherment Public Key Exponent",
        "9F2F" to "ICC PIN Encipherment Public Key Remainder",
        "9F32" to "Issuer Public Key Exponent",
        "9F33" to "Terminal Capabilities",
        "9F34" to "Cardholder Verification Method (CVM) Results",
        "9F35" to "Terminal Type",
        "9F36" to "Application Transaction Counter (ATC)",
        "9F37" to "Unpredictable Number",
        "9F38" to "Processing Options Data Object List (PDOL)",
        "9F39" to "Point-of-Service (POS) Entry Mode",
        "9F3A" to "Amount, Reference Currency",
        "9F3B" to "Application Reference Currency",
        "9F3C" to "Transaction Reference Currency Code",
        "9F3D" to "Transaction Reference Currency Exponent",
        "9F40" to "Additional Terminal Capabilities",
        "9F41" to "Transaction Sequence Counter",
        "9F42" to "Application Currency Code",
        "9F43" to "Application Reference Currency Exponent",
        "9F44" to "Application Currency Exponent",
        "9F45" to "Data Authentication Code",
        "9F46" to "ICC Public Key Certificate",
        "9F47" to "ICC Public Key Exponent",
        "9F48" to "ICC Public Key Remainder",
        "9F49" to "Dynamic Data Authentication Data Object List (DDOL)",
        "9F4A" to "Static Data Authentication Tag List",
        "9F4B" to "Signed Dynamic Application Data",
        "9F4C" to "ICC Dynamic Number",
        "9F4D" to "Log Entry",
        "9F4E" to "Merchant Name and Location",
        "9F4F" to "Log Format",
        "9F50" to "Issuer Application Data",
        "9F51" to "Application Currency Code",
        "9F52" to "Application Reference Currency Exponent",
        "9F53" to "Transaction Category Code",
        "9F54" to "Transaction Information",
        "9F55" to "Issuer Authentication Indicator",
        "9F56" to "Issuer Authentication Data",
        "9F57" to "Issuer Authentication Data",
        "9F58" to "Issuer Authentication Data",
        "9F59" to "Issuer Authentication Data",
        "9F5A" to "Issuer Authentication Data",
        "9F5B" to "Issuer Authentication Data",
        "9F5C" to "Issuer Authentication Data",
        "9F5D" to "Issuer Authentication Data",
        "9F5E" to "Issuer Authentication Data",
        "9F5F" to "Issuer Authentication Data",
        "9F60" to "Issuer Authentication Data",
        "9F61" to "Issuer Authentication Data",
        "9F62" to "Issuer Authentication Data",
        "9F63" to "Issuer Authentication Data",
        "9F64" to "Issuer Authentication Data",
        "9F65" to "Issuer Authentication Data",
        "9F66" to "Issuer Authentication Data",
        "9F67" to "Issuer Authentication Data",
        "9F68" to "Issuer Authentication Data",
        "9F69" to "Issuer Authentication Data",
        "9F6A" to "Issuer Authentication Data",
        "9F6B" to "Issuer Authentication Data",
        "9F6C" to "Issuer Authentication Data",
        "9F6D" to "Issuer Authentication Data",
        "9F6E" to "Issuer Authentication Data",
        "9F6F" to "Issuer Authentication Data",
        "9F70" to "Issuer Authentication Data",
        "9F71" to "Issuer Authentication Data",
        "9F72" to "Issuer Authentication Data",
        "9F73" to "Issuer Authentication Data",
        "9F74" to "Issuer Authentication Data",
        "9F75" to "Issuer Authentication Data",
        "9F76" to "Issuer Authentication Data",
        "9F77" to "Issuer Authentication Data",
        "9F78" to "Issuer Authentication Data",
        "9F79" to "Issuer Authentication Data",
        "9F7A" to "Issuer Authentication Data",
        "9F7B" to "Issuer Authentication Data",
        "9F7C" to "Issuer Authentication Data",
        "9F7D" to "Issuer Authentication Data",
        "9F7E" to "Issuer Authentication Data",
        "9F7F" to "Issuer Authentication Data",
        "A5" to "File Control Information (FCI) Proprietary Template",
        "BF0C" to "File Control Information (FCI) Issuer Discretionary Data",
        "DF836F" to "Client service identifier"
    )

    private fun toTLV(tag: String, value: String): String {
        val length = value.length / 2  // Longitud en bytes
        val lengthHex = length.toString(16).padStart(2, '0').toUpperCase()  // Convertir a hexadecimal
        return "$tag$lengthHex$value"
    }

    fun convertListToTLV(tagValueList: List<Pair<String, String>>): List<String> {
        val tlvList = mutableListOf<String>()
        for ((tag, value) in tagValueList) {
            if (tags.containsKey(tag)) {
                tlvList.add(toTLV(tag, value))
            } else {
                println("Tag $tag not found in the predefined tags.")
            }
        }
        return tlvList
    }
}

// Ejemplo de uso
fun main() {
    val converter = TLVConverter()
    val tagValueList = listOf(
        "06" to "123456",
        "41" to "7890",
        "42" to "ABCDEF",
        // ... (agrega más pares tag-valor aquí)
    )
    val tlvList = converter.convertListToTLV(tagValueList)
    for (tlv in tlvList) {
        println(tlv)
    }
}
